
<div class="tab-button-container">
    @foreach (var tab in _tabs)
    {
        <button class="button non-a-button medium tab-button @GetActiveClass(tab)" @onclick="() => OnTabClicked(tab)">
            @tab.Title
        </button>
    }
</div>
<div class="tab-container">
    @if (_activeTab is not null)
    {
        @_activeTab.Content
    }
</div>

@code {

    private class TabModel
    {
        public string Title { get; init; }
        public RenderFragment Content { get; init; }
    }
    
    [Parameter]
    public IEnumerable<(string Title, RenderFragment Content)> Tabs
    {
        set => _tabs = value.Select(t => new TabModel{Title = t.Title, Content = t.Content}).ToArray();
    }

    private TabModel[] _tabs = Array.Empty<TabModel>();
    private TabModel? _activeTab;

    private RenderFragment? _currentContent;

    protected override void OnParametersSet()
    {
        _activeTab = _tabs.First();
        base.OnParametersSet();
    }

    private string? GetActiveClass(TabModel tab)
    {
        return _activeTab == tab ? "active" : null;
    }

    private void OnTabClicked(TabModel tab)
    {
        _activeTab = tab;
    }

}