@using System.Threading
<CascadingValue Value="this">
    @ChildContent
    <div class="modal-bg @ShowClass">
        <div class="groupBox modal-container">
            <h3 class="modal-header">
                @_title 
                <button class="button small close" @onclick="OnCloseClicked" style="margin: 0.4em;">ðŸ—™</button>
            </h3>
            <div class="groupBoxContent modal-content">
                @_body
            </div>
        </div>
    </div>
</CascadingValue>

@code {

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    private string? ShowClass => !_show ? "hidden" : null;

    private bool _show;
    private string _title;
    private RenderFragment _body;

    private readonly RenderFragment<Exception> _errorFragment = ex => @<div class="exception-container">
                                                                          <b>Type:</b><code class="exception-detail">@ex.GetType().Name</code>
                                                                          <b>Message:</b><code class="exception-detail">@ex.Message</code>
                                                                          <b>Stack trace:</b><code class="exception-detail">@ex.StackTrace</code>
                                                                      </div>;

    public void ShowError(Exception ex)
    {
        _title = "Error";
        _show = true;
        _body = _errorFragment(ex);
        StateHasChanged();
    }

    private void OnCloseClicked()
    {
        _show = false;
    }

    public void Show(string title, RenderFragment body)
    {
        _title = title;
        _body = body;
        _show = true;
        StateHasChanged();
    }
    
}